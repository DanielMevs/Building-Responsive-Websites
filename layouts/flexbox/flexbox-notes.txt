What is Flexbox?


Flexbox
- Flexbox is a set of related CSS properties for 
    building 1-dimensional layouts

- The main idea behind flexbox is that empty space
    inside a container element can be automatically
    divided by its child elements

- Flexbox makes it easy to automatically align
    items to one another inside a parent container,
    both horizontally and vertically

- Flexbox solves common problems such as vertical 
    centering and creating equal-height columns

-Flexbox is perfect for replacing floats, allowing
    us to write fewer and cleaner HTML and CSS code


Flexbox Terminology
- Flex Container: the parent element that contains
    all the flex items. This can be set by setting
    display to flex. (display:flex)

- Flex Items: children of the flex container

- Main Axis: the imaginary horizontal line running
    across the flex container.

- Cross Axis: the imaginary vertical line running
    through the flex container.


Flex Container Attributes
- gap: 0 | length -> To create space between 
    items, without using margin

- justify-content: flex-start | flex-end | center
    | center | baseline -> To align items along
     main axis (horizontally by default)

- align-items: stretch | flex-start | flex-end | 
    center | baseline -> To align items along
    cross axis (vertically, by default)

- flex-direction: row | row-reverse | column | 
    column-reverse -> To define which is the 
    main axis

- flex-wrap: nowrap | wrap| wrap-reverse ->
    To allow items to wrap into a new line if they
    are too large

- align-content: stretch | flex-start | flex-end | 
    center | space-between | space-around ->
    Only applies when there are multiple line
    (flex-wrap: wrap)


Flex Items Attributes
- align-self: auto | stretch | flex-start | 
    flex-end | center | baseline -> To overwrite 
    align-items for individual flex item

- flex-grow: 0 | integer -> to allow an element 
    to grow (0 means no, 1+ means yes. The number
    is directly proportional to the amount of 
    empty space it is allowed to occupy. 2 means
    it takes up twice as much space as the other
    elements.)

- flex-shrink : 1 | integer -> to allow an element 
    to shrink (0 means no, 1+ means yes)

- flex-basis: auto | length -> to define an item's 
    width, instead of the width property

- flex: 0 1 auto | int int len -> Recommended 
    shorthand for flex-grow, flex-shrink, basis 

- order: 0 | integer -> Controls order of items. 
    -1 makes item first, 1+ makes it last. (all 
    flex items are of order 0 by default)